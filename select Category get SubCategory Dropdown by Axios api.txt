ফর্ম থেকে একটি ক্যাটেগরি সিলেক্ট করলে তার আন্ডারে অন্য সাব ক্যাটাগরি গুলো ড্রপডাউন বক্সে শো করবে। ফ্রন্টেন্ড থেকে ক্যাটাগরি আইডি বেকেন্ডে ইউ্আরএলে পাঠাতে হবে, এবং সেই ক্যাটাগরির আন্ডারে যতগুলো সাব ক্যাটাগরি থাকবে সেগুলোকে ফেচ করবে। এটি করতে এক্সিউজ ব্যবহার করতে হবে। এক্সিউজের মাধ্যমে একটি লিংক তৈরী করে, সেই লিংকের মাধ্যমে ক্যাটাগরি আইডি বেকেন্ডে পাঠাতে হবে।

**First Step 'create Route'**
প্রথমে যেই লিংক দ্বারা ক্যাটাগরি আইডি সেন্ড করতে হবে, সেই লিংকের রাউট তৈরী করতে হবে। EX:
Route::get('/get-subcategory/{id}', [SubCategoryController::class, 'getSubCategoryByCategoryId']);

note: যদি এই রাউটের কোন resource আগে থেকেই তৈরী করা থাকে তাহলে এই রাইটটি সেই 'Route::resource' এর উপরে দিতে হবে না হয় ইরর দিতে থাকবে। কারন একটি 'Route::resource' এর ভিতরে default ভাবে 7 টা রাউট থাকে। যেহেতু আমরা কাস্টম ভাবে আরেকটি রাউট তৈরী করছি তােই সেই কাস্টম রাইট টি  resource রাইটের উপর রাখতে হবে। ex:
Route::get('/get-subcategory/{id}', [SubCategoryController::class, 'getSubCategoryByCategoryId']);
Route::resource('/sub-category', SubCategoryController::class);

**Second Step 'create Controller function'**
সাধারনত, একটি টেবিল থেকে রেকর্ড ফেচ করতে হলে কোনো একটি ফিল্ডের দ্বারা ম্যাচ করে ডাটা ফেচ করা হয়।  যেমন  SubCategory টেবিলে 'category_id' নামে একটি ফিল্ড আছে, তাই 'route::get()' এর দ্বারা যেই id পাঠানো হবে সেটার সাথে ম্যাচ করে subCategory টেবিল থেকে ডাটা ফেচ করা হবে।

public function getSubCategoryByCategoryId(int $id)
{
  $sub_categories = SubCategory::select('id','name')->where('category_id', $id)->get();
  return response()->json($sub_categories);
}

--শুধু 'id' এবং 'name' দরকার তাই 'select' ব্যবহার করা হইছে।
--'category_id' সাথে '$id' ম্যাচ করা হইছে।
--response()->json() ব্যবহার করা হইছে ডাটা  wrap করে js এ পাঠানো হবে।

note: যেহেতু subCategory থেকে ডাটা ফেচ করা হবে তাই controller ফাংশন subCategory তে করা হইছে। কারন subCategory মডেল ব্যবহার করে ডাটা আনা হবে।

**Third Step 'html view page'
<div class="col-md-6">
  {!! Form::label('category_id', 'Select Category', ['class'=>'mt-2']) !!}
	এটা category ইলেমেন্ট, এটা থেকে category সিলেক্ট করতে হবে।
  {!! Form::select('category_id', $categories, null, ['id'=>'category_id', 'class'=>'form-select', 'placeholder'=>'Select category']) !!}
</div>
<div class="col-md-6">
  {!! Form::label('sub_category_id', 'Select Sub Category', ['class'=>'mt-2']) !!}
	এটা  sub category ইলেমেন্ট ,  category সিলেক্ট করলে এদিকে sub Category শো করবে।
  <select name="sub_category_id" id="sub_category_id" class="form-select">

  </select>
</div>

	'Js Script'
<script>
//  সাব ক্যাটাগরির 'Select' ট্যাগ ধরা হইসে 'Form' থেকে
let selectElement = $('#sub_category_id');
// ক্যাটাগরি থেকে Category id ধরা হইসে 
let categoryId = $('#category_id');
// রাউটার থেকে শুধু ডোমেইন নাম ধরতে  window.location.origin ধরা হইসে।
let domainName = window.location.origin;
categoryId.on('change', function(){
  let categoryId = $(this).val();
  let subCategoryValues;
      //প্রতিবার  ক্যাটগরি সিলেক্ট করার পর আগের সাব-ক্যাটাগরি যাতে না থাকে, তাই লিংক হিট করার আগে সাব-ক্যাটাগরির সাথে empty() ব্যবহার করা হইসে।
      //যে route url তৈরী করা হইসে সেটা axios.get() এর মাধ্যমে categorId নিয়ে ব্যাকেন্ডে পাঠানো হইসো, যাতে এই ডাটার সাথে ম্যাচ করে সাব ক্যাটাগরি ডাটা এদিকে নিয়ে আসা যায়।
  selectElement.empty();
  selectElement.append(`<option>Select Sub Category</option>`)
  axios.get(`${domainName}/dashboard/get-subcategory/${categoryId}`).then(result => {
    subCategoryValues = result.data; 
                
    subCategoryValues.map(subCategoryItem=>{
      // console.log(item.name);
      selectElement.append(`<option value="${subCategoryItem.id}">${subCategoryItem.name}</option>`);
    })
  })
})
</script>












