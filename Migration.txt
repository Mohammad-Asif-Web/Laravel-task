==================== Migration =============================

মাইগ্রেশন কি -- Laravel এ কাজ করতে  MySQL ডাটাবেসে টেবিলের ভিতরে field গুলো schema করে তৈরী করতে হয়। একটা  migration ফাইল তৈরী করতে হয়। এটার লোকেশন->
database>migration
আর ফাইল নামের ধরন সবসময় plural থাকে-> 2022_03_Products_table.php' 
তো এই ফাইলের ভিতরে আমরা টেবিলের field গুলো লিখে দেই, যেটাকে টেবিলের schema বলা হয়। তারপর এই schema গুলো MySQL ডাটাবেসে টেবিল field রুপে generate করতে একটি কমান্ড চালাতে হয়। 'php artisan serve'
তাহলে automatic migrate হয়ে যায়। আর অবশ্যই আগে মডেল তৈরী করা থাকতে হবে। Model singular নামের হবে আর সেই মডেলের Model migrations নাম হবে plural. 

//table column type
**integer = int type
**string = varchar type, maximum limit 255,
**text = TEXT type, its medium limit not more than 255-1000 characters
**foreignId = Takes the other table primary id(id).+
**time = only time stores
**date = date
**dateTime = DATETIME type
**double = double type
**timestamp = database field will be 'timestamp' type
**timestamps = 'created_at', 'updated_at' এই ২ ফিল্ড টেবিলে একসাথে তৈরী করে।

//Column Modifiers
**->nullable = এই ফিল্ড খালি রাখলে কোনো ইরর দিবে না।
**->after('column_name') --যে ফিল্ডের পরে এটা বসবে।
**->comment('my comment') -- এর ভিতরে কমেন্ট করে রাখা হয়।
**->default($value) = default ভেল্যু রাখে।
**->first() = এই কলাম সবার প্রথমে থাকবে।
**->unique() = এটা সব সময় ইউনিক ডাটা নিবে।

// run the migrations
public function up()
{
  Schema::create('products', function(Blueprint $table){
    $table->id();
    $table->unique('email');
    $table->string('title')->nullable();
    $table->text('description')->nullable();
    $table->tinyInteger('status')->nullable();
    $table->timestamp('deadline')->nullable();
    $table->foreignId('user_id')->constrained()->cascadeOnDelete()->cascadeOnUpdate();
    $table->timestamps();
  });
}

// Reverse the migrations
public function down()
{
  Schema::drop('products');
}

****migration rules for create, update, delete table******
--migrations কতবার চালানো হইসে সেই হিসাব রাখে 'batch' no.
--migrations মেন্যুয়ালি ডিলেট করলে টেবিল ও ডিলেট করতে হবে।
--'php artisan migrate:rollback' লাস্ট  migration এ যে টেবিল তৈরী হইছিলো প্রতিবার এই কমান্ড রান করলে লাস্ট migration থেকে ডিলেট হতে থাকবে। 

****** Add Columns to an Existing Table *********
'php artisan make:migration add_description_and_status_field_in_posts_table --table=posts'
এই কমান্ড রান করলে একটি নতুন migrations ফাইল তৈরী হবে। এই ফাইলের  Schema’র ভিতরে টেবিলের ফিল্ড গুলো বলে দিতে হবে।
up() ফাংশনে যে ফিল্ড গুলো এড করছি, down() ফাংশনে সেই ফিল্ড গুলো dropColumn এ দিতে হবে।
না হয় rollback করার সময় এই ফিল্ড গুলো ডিলেট হবে ন।

public function up()
{
Schema::table('posts', static function(Blueprint $table){
     $table->text('description')->nullable()->after('title');
     $table->tinyInteger('status')->nullable()->after('description')->comment('1 for active, 0 for inactive');
  });
}

public function down()
{
  Schema::table('posts', static function(Blueprint $table){
    $table->dropColumn('description');
    $table->dropColumn('status');
  });
}

'php artisan migrate' করে দিলেই কলাম এড হয়ে যাবে।
'
