উদ্দেশ্য: 3 টা dropdown select box:- division, district এবং thana.
division সিলেক্ট করলে  district একটিভ হবে, তারপর district সিলেক্ট করলে  thana একটিভ হবে। 
কন্ট্রোলার থেকে  create করলে ডাটা গুলো  ডাটাবেসে চলে যাবে।  আবার যখন একই পেজে ডাটা আপডেট করবো তখন select বক্সে যেই ডাটা সিলেক্ট করা ছিলো, সেগুলো সিলেক্ট করা থাকবে।

=======define route======
প্রথমে রাউট লিংক গুলো তৈরী করতে হবে।  লিংকে id দ্বারা হিট করলে ডাটা আসবে, তাই লিংক আগে তৈরী করতে হবে।

//এটা district এর রাউট
Route::get('/get-district/{division_id}',[ProfileController::class, 'getDistrict'])->name('get-district');

// এটা thanar এর রাউট
Route::get('/get-thana/{district_id}',[ProfileController::class, 'getThana'])->name('get-thana');

======== controller ==========
//district এর জন্যে
final public function getDistrict(int $division_id):JsonResponse
 {
   $district = District::select('name', 'id')->where('division_id', $division_id)->get();
   return response()->json($district);
 }

//thanar জন্যে
final public function getThana(int $district_id):JsonResponse
 {
   $thana = Thana::select('name', 'id')->where('district_id', $district_id)->get();
   return response()->json($thana);
 }

====== html view page ========
{!! Form::model($profile, ['method'=>'post', 'route'=>'profile.store']) !!}
<div class="row mt-3">
  {{-- division --}}
  <div class="col-md-4">
    {!! Form::label('division_id', 'Select Division', ['class'=>'w-100 mb-1']) !!}
    {!! Form::select('division_id', $divisions, null, ['id'=>'division_id', 'class'=>'form-select', 'placeholder'=>'select division']) !!}
  </div>
  {{-- district --}}
  <div class="col-md-4">
    {!! Form::label('district_id', 'Select District', ['class'=>'w-100 mb-1']) !!}
    <select name="district_id" id="district_id" class="form-select" disabled>
      <option >Select District</option>
    </select>
  </div>
  {{-- thana --}}
  <div class="col-md-4">
    {!! Form::label('thana_id', 'Select Thana', ['class'=>'w-100 mb-1']) !!}
    <select name="thana_id" id="thana_id" class="form-select" disabled>
      <option >Select Thana</option>
    </select>
  </div>
</div>
{!! Form::close() !!}

======= javascript code =========
<script>
    const DomainUrl = window.location.origin;
    const DivisionId = $('#division_id');
    const DistrictId = $('#district_id');
    const ThanaId = $('#thana_id');

    const getDistrict = (divisionId, selected = null) => {
        axios.get(`${DomainUrl}/get-district/${divisionId}`).then(res=>{
            let districts = res.data;
            DistrictId.removeAttr('disabled');
            DistrictId.empty();
            DistrictId.append(`<option>Select District</option>`)
            districts.map(singleItem =>{
                console.log(singleItem.name);
                DistrictId.append(`<option value="${singleItem.id}"
                                    ${selected==singleItem.id ? 'selected' : null}>
                                    ${singleItem.name}
                                   </option>`);
            })
        })
    }

    const getThana = (districtId, selected = null) => {
        axios.get(`${DomainUrl}/get-thana/${districtId}`).then(res=>{
            let thanas = res.data;
            ThanaId.removeAttr('disabled');
            ThanaId.empty();
            ThanaId.append(`<option>Select Thana</option>`)
            thanas.map(singleItem =>{
                console.log(singleItem.name);
                ThanaId.append(`<option value="${singleItem.id}"
                                 ${selected==singleItem.id ? 'selected' : null}>
                                 ${singleItem.name}
                                </option>`);
            })
        })
    }

    DivisionId.on('change', function(){
        getDistrict($(this).val());
        // যখন  ডিভিসন চ্যন্জ করা হবে, তখন জেলা শো করাবে কিন্তু থানা ডিজেবল থাকবে।
        // থানা তখনই একটিভ হবে যখন জেলা চ্যান্জ হবে। তাই ডিভিসন চ্যান্জ করলে থানা খালি হয়ে
        // নতুন অপশন ইলেমেন্ট যোগ হবে এবং সিলেক্ট বক্সটি ডিজেবল হয়ে যাবে।
        ThanaId.empty().append(`<option>Select Thana</option>`).attr('disabled', 'disabled');
    })
    DistrictId.on('change', function(){
        getThana($(this).val());
    })


    // typeof দিয়ে চেক করা হয় $profile ভেরিয়েবল আছে কিনা? যেহেতু এক পেজেই profile create and update
    // করা হইছে, update করার সময় মডেল বাইন্ডিং করতে ভেরিয়েবল বসিয়ে দিতে হয়। কিন্তু এই ভেরিয়েবল
    // create এর সময় undefined ইরর রিটার্ন করবে। তাই নিচে এই লজিক দেয়া হইছে। যদি $profile ভেরিয়েবল
    // থাকে তাহলে এই ফাংশনগুলো কাজ করবে না হয় এগুলো কাজ করবে না।
    if (typeof '{{$profile}}' !== 'undefined') {
        getDistrict('{{$profile?->division_id}}', '{{$profile?->district_id}}');
        getThana('{{$profile?->district_id}}', '{{$profile?->thana_id}}');
    }
</script>



